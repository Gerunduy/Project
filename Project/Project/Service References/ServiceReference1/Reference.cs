//------------------------------------------------------------------------------
// <auto-generated>
//     Этот код создан программой.
//     Исполняемая версия:4.0.30319.42000
//
//     Изменения в этом файле могут привести к неправильной работе и будут потеряны в случае
//     повторной генерации кода.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Project.ServiceReference1 {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Sensors", Namespace="http://schemas.datacontract.org/2004/07/WcfService1")]
    [System.SerializableAttribute()]
    public partial class Sensors : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Project.ServiceReference1.SensorSteel[] SensorSteelField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Project.ServiceReference1.SensorSteelM3[] SensorSteelM3Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int id_sensorField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string name_sensorField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Project.ServiceReference1.SensorSteel[] SensorSteel {
            get {
                return this.SensorSteelField;
            }
            set {
                if ((object.ReferenceEquals(this.SensorSteelField, value) != true)) {
                    this.SensorSteelField = value;
                    this.RaisePropertyChanged("SensorSteel");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Project.ServiceReference1.SensorSteelM3[] SensorSteelM3 {
            get {
                return this.SensorSteelM3Field;
            }
            set {
                if ((object.ReferenceEquals(this.SensorSteelM3Field, value) != true)) {
                    this.SensorSteelM3Field = value;
                    this.RaisePropertyChanged("SensorSteelM3");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int id_sensor {
            get {
                return this.id_sensorField;
            }
            set {
                if ((this.id_sensorField.Equals(value) != true)) {
                    this.id_sensorField = value;
                    this.RaisePropertyChanged("id_sensor");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string name_sensor {
            get {
                return this.name_sensorField;
            }
            set {
                if ((object.ReferenceEquals(this.name_sensorField, value) != true)) {
                    this.name_sensorField = value;
                    this.RaisePropertyChanged("name_sensor");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="SensorSteel", Namespace="http://schemas.datacontract.org/2004/07/WcfService1")]
    [System.SerializableAttribute()]
    public partial class SensorSteel : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int R01Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int R02Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Project.ServiceReference1.Sensors SensorsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Project.ServiceReference1.Steels SteelsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int id_sensorField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int id_sensor_steelField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int id_steelField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int R01 {
            get {
                return this.R01Field;
            }
            set {
                if ((this.R01Field.Equals(value) != true)) {
                    this.R01Field = value;
                    this.RaisePropertyChanged("R01");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int R02 {
            get {
                return this.R02Field;
            }
            set {
                if ((this.R02Field.Equals(value) != true)) {
                    this.R02Field = value;
                    this.RaisePropertyChanged("R02");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Project.ServiceReference1.Sensors Sensors {
            get {
                return this.SensorsField;
            }
            set {
                if ((object.ReferenceEquals(this.SensorsField, value) != true)) {
                    this.SensorsField = value;
                    this.RaisePropertyChanged("Sensors");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Project.ServiceReference1.Steels Steels {
            get {
                return this.SteelsField;
            }
            set {
                if ((object.ReferenceEquals(this.SteelsField, value) != true)) {
                    this.SteelsField = value;
                    this.RaisePropertyChanged("Steels");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int id_sensor {
            get {
                return this.id_sensorField;
            }
            set {
                if ((this.id_sensorField.Equals(value) != true)) {
                    this.id_sensorField = value;
                    this.RaisePropertyChanged("id_sensor");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int id_sensor_steel {
            get {
                return this.id_sensor_steelField;
            }
            set {
                if ((this.id_sensor_steelField.Equals(value) != true)) {
                    this.id_sensor_steelField = value;
                    this.RaisePropertyChanged("id_sensor_steel");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int id_steel {
            get {
                return this.id_steelField;
            }
            set {
                if ((this.id_steelField.Equals(value) != true)) {
                    this.id_steelField = value;
                    this.RaisePropertyChanged("id_steel");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="SensorSteelM3", Namespace="http://schemas.datacontract.org/2004/07/WcfService1")]
    [System.SerializableAttribute()]
    public partial class SensorSteelM3 : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Project.ServiceReference1.Sensors SensorsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Project.ServiceReference1.Steels SteelsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int W0Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int WfField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int id_sensorField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int id_sensor_steel_m3Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int id_steelField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Project.ServiceReference1.Sensors Sensors {
            get {
                return this.SensorsField;
            }
            set {
                if ((object.ReferenceEquals(this.SensorsField, value) != true)) {
                    this.SensorsField = value;
                    this.RaisePropertyChanged("Sensors");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Project.ServiceReference1.Steels Steels {
            get {
                return this.SteelsField;
            }
            set {
                if ((object.ReferenceEquals(this.SteelsField, value) != true)) {
                    this.SteelsField = value;
                    this.RaisePropertyChanged("Steels");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int W0 {
            get {
                return this.W0Field;
            }
            set {
                if ((this.W0Field.Equals(value) != true)) {
                    this.W0Field = value;
                    this.RaisePropertyChanged("W0");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Wf {
            get {
                return this.WfField;
            }
            set {
                if ((this.WfField.Equals(value) != true)) {
                    this.WfField = value;
                    this.RaisePropertyChanged("Wf");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int id_sensor {
            get {
                return this.id_sensorField;
            }
            set {
                if ((this.id_sensorField.Equals(value) != true)) {
                    this.id_sensorField = value;
                    this.RaisePropertyChanged("id_sensor");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int id_sensor_steel_m3 {
            get {
                return this.id_sensor_steel_m3Field;
            }
            set {
                if ((this.id_sensor_steel_m3Field.Equals(value) != true)) {
                    this.id_sensor_steel_m3Field = value;
                    this.RaisePropertyChanged("id_sensor_steel_m3");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int id_steel {
            get {
                return this.id_steelField;
            }
            set {
                if ((this.id_steelField.Equals(value) != true)) {
                    this.id_steelField = value;
                    this.RaisePropertyChanged("id_steel");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Steels", Namespace="http://schemas.datacontract.org/2004/07/WcfService1")]
    [System.SerializableAttribute()]
    public partial class Steels : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Project.ServiceReference1.SensorSteel[] SensorSteelField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Project.ServiceReference1.SensorSteelM3[] SensorSteelM3Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int id_steelField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string name_steelField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Project.ServiceReference1.SensorSteel[] SensorSteel {
            get {
                return this.SensorSteelField;
            }
            set {
                if ((object.ReferenceEquals(this.SensorSteelField, value) != true)) {
                    this.SensorSteelField = value;
                    this.RaisePropertyChanged("SensorSteel");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Project.ServiceReference1.SensorSteelM3[] SensorSteelM3 {
            get {
                return this.SensorSteelM3Field;
            }
            set {
                if ((object.ReferenceEquals(this.SensorSteelM3Field, value) != true)) {
                    this.SensorSteelM3Field = value;
                    this.RaisePropertyChanged("SensorSteelM3");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int id_steel {
            get {
                return this.id_steelField;
            }
            set {
                if ((this.id_steelField.Equals(value) != true)) {
                    this.id_steelField = value;
                    this.RaisePropertyChanged("id_steel");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string name_steel {
            get {
                return this.name_steelField;
            }
            set {
                if ((object.ReferenceEquals(this.name_steelField, value) != true)) {
                    this.name_steelField = value;
                    this.RaisePropertyChanged("name_steel");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ServiceReference1.IService1")]
    public interface IService1 {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetlistSensor", ReplyAction="http://tempuri.org/IService1/GetlistSensorResponse")]
        Project.ServiceReference1.Sensors[] GetlistSensor();
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IService1/GetlistSensor", ReplyAction="http://tempuri.org/IService1/GetlistSensorResponse")]
        System.IAsyncResult BeginGetlistSensor(System.AsyncCallback callback, object asyncState);
        
        Project.ServiceReference1.Sensors[] EndGetlistSensor(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetlistSteelM1", ReplyAction="http://tempuri.org/IService1/GetlistSteelM1Response")]
        Project.ServiceReference1.Steels[] GetlistSteelM1(int id_Sensor);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IService1/GetlistSteelM1", ReplyAction="http://tempuri.org/IService1/GetlistSteelM1Response")]
        System.IAsyncResult BeginGetlistSteelM1(int id_Sensor, System.AsyncCallback callback, object asyncState);
        
        Project.ServiceReference1.Steels[] EndGetlistSteelM1(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetlistSteelM3", ReplyAction="http://tempuri.org/IService1/GetlistSteelM3Response")]
        Project.ServiceReference1.Steels[] GetlistSteelM3(int id_Sensor);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IService1/GetlistSteelM3", ReplyAction="http://tempuri.org/IService1/GetlistSteelM3Response")]
        System.IAsyncResult BeginGetlistSteelM3(int id_Sensor, System.AsyncCallback callback, object asyncState);
        
        Project.ServiceReference1.Steels[] EndGetlistSteelM3(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetlistSensor_SteelM1", ReplyAction="http://tempuri.org/IService1/GetlistSensor_SteelM1Response")]
        Project.ServiceReference1.SensorSteel[] GetlistSensor_SteelM1(int Id_Sensors, int Id_Steel);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IService1/GetlistSensor_SteelM1", ReplyAction="http://tempuri.org/IService1/GetlistSensor_SteelM1Response")]
        System.IAsyncResult BeginGetlistSensor_SteelM1(int Id_Sensors, int Id_Steel, System.AsyncCallback callback, object asyncState);
        
        Project.ServiceReference1.SensorSteel[] EndGetlistSensor_SteelM1(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetlistSensor_SteelM3", ReplyAction="http://tempuri.org/IService1/GetlistSensor_SteelM3Response")]
        Project.ServiceReference1.SensorSteelM3[] GetlistSensor_SteelM3(int Id_Sensors, int Id_Steel);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IService1/GetlistSensor_SteelM3", ReplyAction="http://tempuri.org/IService1/GetlistSensor_SteelM3Response")]
        System.IAsyncResult BeginGetlistSensor_SteelM3(int Id_Sensors, int Id_Steel, System.AsyncCallback callback, object asyncState);
        
        Project.ServiceReference1.SensorSteelM3[] EndGetlistSensor_SteelM3(System.IAsyncResult result);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IService1Channel : Project.ServiceReference1.IService1, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetlistSensorCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetlistSensorCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public Project.ServiceReference1.Sensors[] Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((Project.ServiceReference1.Sensors[])(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetlistSteelM1CompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetlistSteelM1CompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public Project.ServiceReference1.Steels[] Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((Project.ServiceReference1.Steels[])(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetlistSteelM3CompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetlistSteelM3CompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public Project.ServiceReference1.Steels[] Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((Project.ServiceReference1.Steels[])(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetlistSensor_SteelM1CompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetlistSensor_SteelM1CompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public Project.ServiceReference1.SensorSteel[] Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((Project.ServiceReference1.SensorSteel[])(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetlistSensor_SteelM3CompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetlistSensor_SteelM3CompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public Project.ServiceReference1.SensorSteelM3[] Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((Project.ServiceReference1.SensorSteelM3[])(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class Service1Client : System.ServiceModel.ClientBase<Project.ServiceReference1.IService1>, Project.ServiceReference1.IService1 {
        
        private BeginOperationDelegate onBeginGetlistSensorDelegate;
        
        private EndOperationDelegate onEndGetlistSensorDelegate;
        
        private System.Threading.SendOrPostCallback onGetlistSensorCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetlistSteelM1Delegate;
        
        private EndOperationDelegate onEndGetlistSteelM1Delegate;
        
        private System.Threading.SendOrPostCallback onGetlistSteelM1CompletedDelegate;
        
        private BeginOperationDelegate onBeginGetlistSteelM3Delegate;
        
        private EndOperationDelegate onEndGetlistSteelM3Delegate;
        
        private System.Threading.SendOrPostCallback onGetlistSteelM3CompletedDelegate;
        
        private BeginOperationDelegate onBeginGetlistSensor_SteelM1Delegate;
        
        private EndOperationDelegate onEndGetlistSensor_SteelM1Delegate;
        
        private System.Threading.SendOrPostCallback onGetlistSensor_SteelM1CompletedDelegate;
        
        private BeginOperationDelegate onBeginGetlistSensor_SteelM3Delegate;
        
        private EndOperationDelegate onEndGetlistSensor_SteelM3Delegate;
        
        private System.Threading.SendOrPostCallback onGetlistSensor_SteelM3CompletedDelegate;
        
        public Service1Client() {
        }
        
        public Service1Client(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public Service1Client(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public Service1Client(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public Service1Client(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public event System.EventHandler<GetlistSensorCompletedEventArgs> GetlistSensorCompleted;
        
        public event System.EventHandler<GetlistSteelM1CompletedEventArgs> GetlistSteelM1Completed;
        
        public event System.EventHandler<GetlistSteelM3CompletedEventArgs> GetlistSteelM3Completed;
        
        public event System.EventHandler<GetlistSensor_SteelM1CompletedEventArgs> GetlistSensor_SteelM1Completed;
        
        public event System.EventHandler<GetlistSensor_SteelM3CompletedEventArgs> GetlistSensor_SteelM3Completed;
        
        public Project.ServiceReference1.Sensors[] GetlistSensor() {
            return base.Channel.GetlistSensor();
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetlistSensor(System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetlistSensor(callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public Project.ServiceReference1.Sensors[] EndGetlistSensor(System.IAsyncResult result) {
            return base.Channel.EndGetlistSensor(result);
        }
        
        private System.IAsyncResult OnBeginGetlistSensor(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return this.BeginGetlistSensor(callback, asyncState);
        }
        
        private object[] OnEndGetlistSensor(System.IAsyncResult result) {
            Project.ServiceReference1.Sensors[] retVal = this.EndGetlistSensor(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetlistSensorCompleted(object state) {
            if ((this.GetlistSensorCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetlistSensorCompleted(this, new GetlistSensorCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetlistSensorAsync() {
            this.GetlistSensorAsync(null);
        }
        
        public void GetlistSensorAsync(object userState) {
            if ((this.onBeginGetlistSensorDelegate == null)) {
                this.onBeginGetlistSensorDelegate = new BeginOperationDelegate(this.OnBeginGetlistSensor);
            }
            if ((this.onEndGetlistSensorDelegate == null)) {
                this.onEndGetlistSensorDelegate = new EndOperationDelegate(this.OnEndGetlistSensor);
            }
            if ((this.onGetlistSensorCompletedDelegate == null)) {
                this.onGetlistSensorCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetlistSensorCompleted);
            }
            base.InvokeAsync(this.onBeginGetlistSensorDelegate, null, this.onEndGetlistSensorDelegate, this.onGetlistSensorCompletedDelegate, userState);
        }
        
        public Project.ServiceReference1.Steels[] GetlistSteelM1(int id_Sensor) {
            return base.Channel.GetlistSteelM1(id_Sensor);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetlistSteelM1(int id_Sensor, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetlistSteelM1(id_Sensor, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public Project.ServiceReference1.Steels[] EndGetlistSteelM1(System.IAsyncResult result) {
            return base.Channel.EndGetlistSteelM1(result);
        }
        
        private System.IAsyncResult OnBeginGetlistSteelM1(object[] inValues, System.AsyncCallback callback, object asyncState) {
            int id_Sensor = ((int)(inValues[0]));
            return this.BeginGetlistSteelM1(id_Sensor, callback, asyncState);
        }
        
        private object[] OnEndGetlistSteelM1(System.IAsyncResult result) {
            Project.ServiceReference1.Steels[] retVal = this.EndGetlistSteelM1(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetlistSteelM1Completed(object state) {
            if ((this.GetlistSteelM1Completed != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetlistSteelM1Completed(this, new GetlistSteelM1CompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetlistSteelM1Async(int id_Sensor) {
            this.GetlistSteelM1Async(id_Sensor, null);
        }
        
        public void GetlistSteelM1Async(int id_Sensor, object userState) {
            if ((this.onBeginGetlistSteelM1Delegate == null)) {
                this.onBeginGetlistSteelM1Delegate = new BeginOperationDelegate(this.OnBeginGetlistSteelM1);
            }
            if ((this.onEndGetlistSteelM1Delegate == null)) {
                this.onEndGetlistSteelM1Delegate = new EndOperationDelegate(this.OnEndGetlistSteelM1);
            }
            if ((this.onGetlistSteelM1CompletedDelegate == null)) {
                this.onGetlistSteelM1CompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetlistSteelM1Completed);
            }
            base.InvokeAsync(this.onBeginGetlistSteelM1Delegate, new object[] {
                        id_Sensor}, this.onEndGetlistSteelM1Delegate, this.onGetlistSteelM1CompletedDelegate, userState);
        }
        
        public Project.ServiceReference1.Steels[] GetlistSteelM3(int id_Sensor) {
            return base.Channel.GetlistSteelM3(id_Sensor);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetlistSteelM3(int id_Sensor, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetlistSteelM3(id_Sensor, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public Project.ServiceReference1.Steels[] EndGetlistSteelM3(System.IAsyncResult result) {
            return base.Channel.EndGetlistSteelM3(result);
        }
        
        private System.IAsyncResult OnBeginGetlistSteelM3(object[] inValues, System.AsyncCallback callback, object asyncState) {
            int id_Sensor = ((int)(inValues[0]));
            return this.BeginGetlistSteelM3(id_Sensor, callback, asyncState);
        }
        
        private object[] OnEndGetlistSteelM3(System.IAsyncResult result) {
            Project.ServiceReference1.Steels[] retVal = this.EndGetlistSteelM3(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetlistSteelM3Completed(object state) {
            if ((this.GetlistSteelM3Completed != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetlistSteelM3Completed(this, new GetlistSteelM3CompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetlistSteelM3Async(int id_Sensor) {
            this.GetlistSteelM3Async(id_Sensor, null);
        }
        
        public void GetlistSteelM3Async(int id_Sensor, object userState) {
            if ((this.onBeginGetlistSteelM3Delegate == null)) {
                this.onBeginGetlistSteelM3Delegate = new BeginOperationDelegate(this.OnBeginGetlistSteelM3);
            }
            if ((this.onEndGetlistSteelM3Delegate == null)) {
                this.onEndGetlistSteelM3Delegate = new EndOperationDelegate(this.OnEndGetlistSteelM3);
            }
            if ((this.onGetlistSteelM3CompletedDelegate == null)) {
                this.onGetlistSteelM3CompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetlistSteelM3Completed);
            }
            base.InvokeAsync(this.onBeginGetlistSteelM3Delegate, new object[] {
                        id_Sensor}, this.onEndGetlistSteelM3Delegate, this.onGetlistSteelM3CompletedDelegate, userState);
        }
        
        public Project.ServiceReference1.SensorSteel[] GetlistSensor_SteelM1(int Id_Sensors, int Id_Steel) {
            return base.Channel.GetlistSensor_SteelM1(Id_Sensors, Id_Steel);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetlistSensor_SteelM1(int Id_Sensors, int Id_Steel, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetlistSensor_SteelM1(Id_Sensors, Id_Steel, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public Project.ServiceReference1.SensorSteel[] EndGetlistSensor_SteelM1(System.IAsyncResult result) {
            return base.Channel.EndGetlistSensor_SteelM1(result);
        }
        
        private System.IAsyncResult OnBeginGetlistSensor_SteelM1(object[] inValues, System.AsyncCallback callback, object asyncState) {
            int Id_Sensors = ((int)(inValues[0]));
            int Id_Steel = ((int)(inValues[1]));
            return this.BeginGetlistSensor_SteelM1(Id_Sensors, Id_Steel, callback, asyncState);
        }
        
        private object[] OnEndGetlistSensor_SteelM1(System.IAsyncResult result) {
            Project.ServiceReference1.SensorSteel[] retVal = this.EndGetlistSensor_SteelM1(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetlistSensor_SteelM1Completed(object state) {
            if ((this.GetlistSensor_SteelM1Completed != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetlistSensor_SteelM1Completed(this, new GetlistSensor_SteelM1CompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetlistSensor_SteelM1Async(int Id_Sensors, int Id_Steel) {
            this.GetlistSensor_SteelM1Async(Id_Sensors, Id_Steel, null);
        }
        
        public void GetlistSensor_SteelM1Async(int Id_Sensors, int Id_Steel, object userState) {
            if ((this.onBeginGetlistSensor_SteelM1Delegate == null)) {
                this.onBeginGetlistSensor_SteelM1Delegate = new BeginOperationDelegate(this.OnBeginGetlistSensor_SteelM1);
            }
            if ((this.onEndGetlistSensor_SteelM1Delegate == null)) {
                this.onEndGetlistSensor_SteelM1Delegate = new EndOperationDelegate(this.OnEndGetlistSensor_SteelM1);
            }
            if ((this.onGetlistSensor_SteelM1CompletedDelegate == null)) {
                this.onGetlistSensor_SteelM1CompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetlistSensor_SteelM1Completed);
            }
            base.InvokeAsync(this.onBeginGetlistSensor_SteelM1Delegate, new object[] {
                        Id_Sensors,
                        Id_Steel}, this.onEndGetlistSensor_SteelM1Delegate, this.onGetlistSensor_SteelM1CompletedDelegate, userState);
        }
        
        public Project.ServiceReference1.SensorSteelM3[] GetlistSensor_SteelM3(int Id_Sensors, int Id_Steel) {
            return base.Channel.GetlistSensor_SteelM3(Id_Sensors, Id_Steel);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetlistSensor_SteelM3(int Id_Sensors, int Id_Steel, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetlistSensor_SteelM3(Id_Sensors, Id_Steel, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public Project.ServiceReference1.SensorSteelM3[] EndGetlistSensor_SteelM3(System.IAsyncResult result) {
            return base.Channel.EndGetlistSensor_SteelM3(result);
        }
        
        private System.IAsyncResult OnBeginGetlistSensor_SteelM3(object[] inValues, System.AsyncCallback callback, object asyncState) {
            int Id_Sensors = ((int)(inValues[0]));
            int Id_Steel = ((int)(inValues[1]));
            return this.BeginGetlistSensor_SteelM3(Id_Sensors, Id_Steel, callback, asyncState);
        }
        
        private object[] OnEndGetlistSensor_SteelM3(System.IAsyncResult result) {
            Project.ServiceReference1.SensorSteelM3[] retVal = this.EndGetlistSensor_SteelM3(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetlistSensor_SteelM3Completed(object state) {
            if ((this.GetlistSensor_SteelM3Completed != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetlistSensor_SteelM3Completed(this, new GetlistSensor_SteelM3CompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetlistSensor_SteelM3Async(int Id_Sensors, int Id_Steel) {
            this.GetlistSensor_SteelM3Async(Id_Sensors, Id_Steel, null);
        }
        
        public void GetlistSensor_SteelM3Async(int Id_Sensors, int Id_Steel, object userState) {
            if ((this.onBeginGetlistSensor_SteelM3Delegate == null)) {
                this.onBeginGetlistSensor_SteelM3Delegate = new BeginOperationDelegate(this.OnBeginGetlistSensor_SteelM3);
            }
            if ((this.onEndGetlistSensor_SteelM3Delegate == null)) {
                this.onEndGetlistSensor_SteelM3Delegate = new EndOperationDelegate(this.OnEndGetlistSensor_SteelM3);
            }
            if ((this.onGetlistSensor_SteelM3CompletedDelegate == null)) {
                this.onGetlistSensor_SteelM3CompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetlistSensor_SteelM3Completed);
            }
            base.InvokeAsync(this.onBeginGetlistSensor_SteelM3Delegate, new object[] {
                        Id_Sensors,
                        Id_Steel}, this.onEndGetlistSensor_SteelM3Delegate, this.onGetlistSensor_SteelM3CompletedDelegate, userState);
        }
    }
}
